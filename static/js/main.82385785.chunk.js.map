{"version":3,"sources":["utils/useInterval.ts","assets/bothead-png/T0.png","assets/bothead-png/T1.png","assets/bothead-png/T2.png","assets/bothead-png/T3.png","assets/bothead-png/T4.png","assets/bothead-png/T5.png","assets/banner-webm.webm","assets/banner.jpeg","components/Title/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","Title","className","data-text","imgList","T0","T1","T2","T3","T4","T5","App","useState","imgIndex","setImgIndex","imgUrl","setImgUrl","src","alt","autoPlay","loop","muted","width","preload","poster","Banner","BannerWebm","type","onInit","typewriter","changeDelay","typeString","pauseFor","callFunction","console","log","start","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAuBeA,MArBf,SAAqBC,EAAsBC,GACzC,IAAMC,EAAgBC,iBAAOH,GAG7BI,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAGJI,qBAAU,WAER,GAAc,OAAVH,EAAJ,CAIA,IAAMK,EAAKC,aAAY,kBAAML,EAAcG,YAAWJ,GAEtD,OAAO,kBAAMO,cAAcF,OAC1B,CAACL,KCpBS,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,+BCA1B,MAA0B,yCCA1B,MAA0B,oC,eCE1B,SAASQ,IACtB,OACE,qBAAKC,UAAU,cAAf,SACE,qBAAKA,UAAU,aAAf,SACE,mBAAGC,YAAU,qBAAqBD,UAAU,mBAA5C,oC,UCkBFE,EAAU,CAACC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GA+EtBC,MA7Ef,WAAgB,IAAD,EACmBC,mBAAS,GAD5B,mBACNC,EADM,KACIC,EADJ,OAEeF,mBAAiBP,GAFhC,mBAENU,EAFM,KAEEC,EAFF,KAcb,OAVAzB,GAAY,WACNsB,EAAW,GACbG,EAAUZ,EAAQS,IAClBC,EAAYD,EAAW,KAEvBG,EAAUZ,EAAQ,IAClBU,EAAY,MAEb,KAGD,qBAAKZ,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,YAAf,UACE,qBAAKJ,GAAG,aACR,qBAAKI,UAAU,uBAAf,6BAIF,qBAAKA,UAAU,eAAf,SACE,qBAAKe,IAAKF,EAAQb,UAAU,UAAUgB,IAAI,cAE5C,sBAAKhB,UAAU,SAAf,UAEE,uBACEiB,UAAQ,EACRC,MAAI,EACJC,OAAK,EACLC,MAAM,OACNpB,UAAU,aACVqB,QAAQ,OACRC,OAAQC,EAPV,SASE,wBAAQR,IAAKS,EAAYC,KAAK,gBAEhC,qBAAKzB,UAAU,QAAf,SACE,cAAC,IAAD,CACE0B,OAAQ,SAACC,GACPA,EACGC,YAAY,IACZC,WACC,+SAEDC,SAAS,KACTD,WANH,sZASGC,SAAS,KACTD,WAVH,uRAaGE,cAAa,WACZC,QAAQC,IAAI,wBAGbF,cAAa,WACZC,QAAQC,IAAI,+BAEbC,gBAKX,qBAAKlC,UAAU,SAAf,gDChFOmC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82385785.chunk.js","sourcesContent":["import { useRef, useEffect } from 'react'\n\nfunction useInterval(callback: () => void, delay: number | null) {\n  const savedCallback = useRef(callback)\n\n  // Remember the latest callback if it changes.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    // Don't schedule if no delay is specified.\n    if (delay === null) {\n      return\n    }\n\n    const id = setInterval(() => savedCallback.current(), delay)\n\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export default __webpack_public_path__ + \"static/media/T0.c5d089f0.png\";","export default __webpack_public_path__ + \"static/media/T1.e4f02360.png\";","export default __webpack_public_path__ + \"static/media/T2.370ad092.png\";","export default __webpack_public_path__ + \"static/media/T3.bbaf88be.png\";","export default __webpack_public_path__ + \"static/media/T4.8f27bcbc.png\";","export default __webpack_public_path__ + \"static/media/T5.fdc6fef8.png\";","export default __webpack_public_path__ + \"static/media/banner-webm.aaa4c6aa.webm\";","export default __webpack_public_path__ + \"static/media/banner.883a114d.jpeg\";","import \"./index.less\";\n\nexport default function Title() {\n  return (\n    <div className=\"cyber-title\">\n      <div className=\"title-text\">\n        <p data-text=\"bothead collection\" className=\"cyber-title-text\">\n          bothead collection\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Typewriter from \"typewriter-effect\";\nimport useInterval from \"./utils/useInterval\";\nimport Num5 from \"./assets/Yellow-Number/5.svg\";\nimport NumSpecial from \"./assets/Yellow-Number/special.svg\";\nimport Num6 from \"./assets/Yellow-Number/6.svg\";\nimport Num9 from \"./assets/Yellow-Number/9.svg\";\nimport Num8 from \"./assets/Yellow-Number/8.svg\";\nimport Num0 from \"./assets/Yellow-Number/0.svg\";\nimport Num2 from \"./assets/Yellow-Number/2.svg\";\nimport Num1 from \"./assets/Yellow-Number/1.svg\";\nimport T0 from \"./assets/bothead-png/T0.png\";\nimport T1 from \"./assets/bothead-png/T1.png\";\nimport T2 from \"./assets/bothead-png/T2.png\";\nimport T3 from \"./assets/bothead-png/T3.png\";\nimport T4 from \"./assets/bothead-png/T4.png\";\nimport T5 from \"./assets/bothead-png/T5.png\";\nimport bothead from \"./assets/5.png\";\nimport Button from \"./components/Button\";\nimport BannerWebm from \"./assets/banner-webm.webm\";\nimport Banner from \"./assets/banner.jpeg\";\nimport Title from \"./components/Title\";\nimport \"./App.less\";\n\nconst imgList = [T0, T1, T2, T3, T4, T5];\n\nfunction App() {\n  const [imgIndex, setImgIndex] = useState(0);\n  const [imgUrl, setImgUrl] = useState<string>(T0);\n\n  useInterval(() => {\n    if (imgIndex < 6) {\n      setImgUrl(imgList[imgIndex]);\n      setImgIndex(imgIndex + 1);\n    } else {\n      setImgUrl(imgList[0]);\n      setImgIndex(0);\n    }\n  }, 100);\n\n  return (\n    <div className=\"App\">\n      <div className=\"Index\">\n        <Title />\n        <div className=\"open-mint\">\n          <div id=\"triangle\"></div>\n          <div className=\"open-mint-time-title\">COMMING SOON</div>\n          {/* <div className=\"number-count\">21:58:34</div> */}\n          {/* <div className=\"number-count\">COMMING SOON</div> */}\n        </div>\n        <div className=\"bothead-show\">\n          <img src={imgUrl} className=\"bothead\" alt=\"bothead\" />\n        </div>\n        <div className=\"banner\">\n          {/* <img src={Banner} width=\"100%\" className=\"banner-img\" alt=\"banner\" /> */}\n          <video\n            autoPlay\n            loop\n            muted\n            width=\"100%\"\n            className=\"banner-img\"\n            preload=\"auto\"\n            poster={Banner}\n          >\n            <source src={BannerWebm} type=\"video/mp4\" />\n          </video>\n          <div className=\"typer\">\n            <Typewriter\n              onInit={(typewriter) => {\n                typewriter\n                  .changeDelay(20)\n                  .typeString(\n                    \"BOTHEAD is alive! Shrouded in mystery, the ultra-high-tech BOTHEADs are friendly and curious. They have come to experience the beauty of life on Earth. Their encounters have inspired a deep love and admiration for our world and humanity, which each individual BOTHEAD exhibits in its own unique way.\"\n                  )\n                  .pauseFor(300)\n                  .typeString(\n                    ` <br /><br /> Exploring the vast planet, some BOTHEADs have traveled to the wilderness to behold nature’s miracles, while others are in the cities marveling at the sites. Others still may be found in your kitchen or backyard, captivated by the simple pleasures available all around us. They are planet Earth’s number one fan, and their presence is surely a sign of greater things yet to come!`\n                  )\n                  .pauseFor(300)\n                  .typeString(\n                    ` <br /><br /> Their mission here is far from over. In fact, we are just beginning to understand how they intend to share their advanced technologies and secrets of the universe to promote humanity’s achievements and boost the beauty of our world to unprecedented levels!`\n                  )\n                  .callFunction(() => {\n                    console.log(\"String typed out!\");\n                  })\n                  // .deleteAll()\n                  .callFunction(() => {\n                    console.log(\"All strings were deleted\");\n                  })\n                  .start();\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"footer\">© 2021 BotHead Collection</div>\n        {/* <div className=\"mint-button\">\n          <Button></Button>\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}